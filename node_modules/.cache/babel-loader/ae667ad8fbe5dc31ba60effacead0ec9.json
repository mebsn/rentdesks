{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: \"homePage\",\n\n  data() {\n    return {\n      msg: JSON.parse(localStorage.getItem(\"user\")),\n      bigRoomDesks: this.$store.state.desks.desks.filter(desk => desk.place == \"bigRoom\"),\n      smallRoomDesks: this.$store.state.desks.desks.filter(desk => desk.place == \"smallRoom\"),\n      showBigRoomForUser: true,\n      showSmallRoomForUser: true,\n      isAdmin: false\n    };\n  },\n\n  mounted() {\n    let activeUser = JSON.parse(localStorage.getItem(\"user\"));\n\n    if (activeUser.role == \"admin\") {\n      this.isAdmin = true;\n    }\n\n    const isAvailable = currentValue => currentValue.istaken == true;\n\n    let statusBigRoom = this.bigRoomDesks.every(isAvailable);\n    let statusSmallRoom = this.smallRoomDesks.every(isAvailable);\n\n    if (activeUser.role == \"client\" && statusBigRoom == true) {\n      this.showBigRoomForUser = false;\n    } else if (activeUser.role == \"client\" && statusSmallRoom == true) {\n      this.showSmallRoomForUser = false;\n    }\n  },\n\n  methods: {\n    goToDesks() {\n      this.$router.push({\n        path: \"/desks\"\n      });\n    },\n\n    logout() {\n      localStorage.removeItem(\"user\");\n      this.$router.push({\n        path: \"/\"\n      });\n    },\n\n    blockedDesk(x) {\n      alert(\"desk with id \" + x + \" is already in use\");\n    },\n\n    rentDesk(x, y) {\n      alert(\"you have booked desk with id - \" + x + \"and price \" + y);\n      this.$store.state.desks.desks[x].istaken = true;\n    }\n\n  }\n};","map":{"version":3,"mappings":";AAuCA;EACAA,gBADA;;EAEAC;IACA;MACAC,6CADA;MAEAC,mDACAC,+BADA,CAFA;MAKAC,qDACAD,iCADA,CALA;MAQAE,wBARA;MASAC,0BATA;MAUAC;IAVA;EAYA,CAfA;;EAgBAC;IACA;;IACA;MACA;IACA;;IACA;;IACA;IACA;;IACA;MACA;IACA,CAFA,MAEA;MACA;IACA;EACA,CA7BA;;EA8BAC;IACAC;MACA;QAAAC;MAAA;IACA,CAHA;;IAIAC;MACAC;MACA;QAAAF;MAAA;IACA,CAPA;;IAQAG;MACAC;IACA,CAVA;;IAWAC;MACAD;MACA;IACA;;EAdA;AA9BA","names":["name","data","msg","bigRoomDesks","desk","smallRoomDesks","showBigRoomForUser","showSmallRoomForUser","isAdmin","mounted","methods","goToDesks","path","logout","localStorage","blockedDesk","alert","rentDesk"],"sourceRoot":"src/components","sources":["homePage.vue"],"sourcesContent":["<template>\r\n  <div class=\"container\">\r\n    <div class=\"welcome\">wellcome {{ msg.username }}</div>\r\n    <div class=\"option\" v-if=\"isAdmin\" @click=\"goToDesks()\">desks</div>\r\n    <div class=\"bigTable\" v-if=\"showBigRoomForUser\">\r\n      <div>Big Room</div>\r\n      <div class=\"desks\" v-for=\"desk in bigRoomDesks\" :key=\"desk.id\">\r\n        id:{{ desk.id }} available: {{ desk.istaken }} size:{{\r\n          desk.size\r\n        }}\r\n        price:{{ desk.price }} location:{{ desk.location }}\r\n        <button\r\n          @click=\"\r\n            desk.istaken == false\r\n              ? rentDesk(desk.id, desk.price)\r\n              : blockedDesk(desk.id);\r\n          \"\r\n        >\r\n          {{ desk.istaken == false ? \"Rent Desk\" : \"blocked\" }}\r\n        </button>\r\n      </div>\r\n    </div>\r\n    <div class=\"bigTable\" v-if=\"showSmallRoomForUser\">\r\n      <div>Small Room</div>\r\n      <div class=\"desks\" v-for=\"desk in smallRoomDesks\" :key=\"desk.id\">\r\n        id:{{ desk.id }} available: {{ desk.istaken }} size:{{\r\n          desk.size\r\n        }}\r\n        price:{{ desk.price }} location:{{ desk.location }}\r\n        <button>\r\n          {{ desk.istaken == false ? \"Rent Desk\" : \"blocked\" }}\r\n        </button>\r\n      </div>\r\n    </div>\r\n    <div class=\"logout\" @click=\"logout()\">Log Out</div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"homePage\",\r\n  data() {\r\n    return {\r\n      msg: JSON.parse(localStorage.getItem(\"user\")),\r\n      bigRoomDesks: this.$store.state.desks.desks.filter(\r\n        (desk) => desk.place == \"bigRoom\"\r\n      ),\r\n      smallRoomDesks: this.$store.state.desks.desks.filter(\r\n        (desk) => desk.place == \"smallRoom\"\r\n      ),\r\n      showBigRoomForUser: true,\r\n      showSmallRoomForUser: true,\r\n      isAdmin: false,\r\n    };\r\n  },\r\n  mounted() {\r\n    let activeUser = JSON.parse(localStorage.getItem(\"user\"));\r\n    if (activeUser.role == \"admin\") {\r\n      this.isAdmin = true;\r\n    }\r\n    const isAvailable = (currentValue) => currentValue.istaken == true;\r\n    let statusBigRoom = this.bigRoomDesks.every(isAvailable);\r\n    let statusSmallRoom = this.smallRoomDesks.every(isAvailable);\r\n    if (activeUser.role == \"client\" && statusBigRoom == true) {\r\n      this.showBigRoomForUser = false;\r\n    } else if (activeUser.role == \"client\" && statusSmallRoom == true) {\r\n      this.showSmallRoomForUser = false;\r\n    }\r\n  },\r\n  methods: {\r\n    goToDesks() {\r\n      this.$router.push({ path: \"/desks\" });\r\n    },\r\n    logout() {\r\n      localStorage.removeItem(\"user\");\r\n      this.$router.push({ path: \"/\" });\r\n    },\r\n    blockedDesk(x) {\r\n      alert(\"desk with id \" + x +\" is already in use\");\r\n    },\r\n    rentDesk(x,y) {\r\n      alert(\"you have booked desk with id - \" + x + \"and price \" + y );\r\n      this.$store.state.desks.desks[x].istaken = true;\r\n    }\r\n  },\r\n};\r\n</script>\r\n\r\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n<style scoped>\r\n.container {\r\n  width: 100%;\r\n  height: 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n}\r\n.welcome {\r\n  margin-top: 50px;\r\n}\r\n.bigTable {\r\n  margin-top: 50px;\r\n  border: 2px solid black;\r\n}\r\n.desks {\r\n  margin-top: 5px;\r\n  border: 2px solid black;\r\n}\r\n.option {\r\n  margin-top: 10px;\r\n  margin-bottom: 10px;\r\n  width: 80px;\r\n  background-color: blue;\r\n  height: 30px;\r\n  color: white;\r\n}\r\n.logout {\r\n  margin-top: 200px;\r\n  width: 120px;\r\n  height: 40px;\r\n  border-radius: 6px;\r\n  cursor: pointer;\r\n  background-color: aqua;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}